---
import Layout from '../layouts/Layout.astro';
import ComponentCard from "../components/ComponentCard.astro";
import TableOfContents from "../components/TableOfContents.astro";
import Header from "../components/Header.astro";
import { slugify } from '../functions/slugify';

// Data
import components from '../contents/component-lists/components.json';
import {slugify} from "../functions/slugify";
components.sort((a, b) => (a.group > b.group) - (a.group < b.group));

const groupedComponents = components.reduce((acc, component) => {
    if (!acc[component.group]) {
        acc[component.group] = [];
    }
    acc[component.group].push(component);
    return acc;
}, {});

const groups = Object.keys(groupedComponents).sort();
---

<Layout title="Components" bodyClass="components components-overview">

    <Header title="Components" link="https://github.com/laminas/" linkTitle="Go to repository of Laminas Components" />

    <div class="container">
        <div class="row">
            <main class="col-sm-12 content">
                <h3 class="display-4">Documentation of Components<br>
                    <small class="text-muted">Components for Enterprise
                        Applications
                    </small>
                </h3>
                <hr>

                <TableOfContents groups={groups} />

                {Object.entries(groupedComponents).map(([group, components]) => { return (
                    <h4 id={slugify(group)}>{group}</h4>
                    <div class="row row-cols-1 row-cols-md-2">
                        {components.map((component) => { return (
                            <ComponentCard name={component.name} body={component.description} repository={component.package} href={component.url} />
                        )})}
                    </div>
                )})}

            </main>
        </div>
    </div>
</Layout>